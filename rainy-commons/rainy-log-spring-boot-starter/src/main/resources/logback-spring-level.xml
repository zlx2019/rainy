<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<configuration>-->
<!--    &lt;!&ndash; 按等级写入不同日志文件. &ndash;&gt;-->

<!--    <contextName>${APP_NAME}</contextName>-->
<!--    &lt;!&ndash; 应用程序名称 &ndash;&gt;-->
<!--    <springProperty name="APP_NAME" scope="context" source="spring.application.name"/>-->
<!--    &lt;!&ndash; 日志文件名称 &ndash;&gt;-->
<!--    <springProperty name="LOG_FILE" scope="context" source="logging.file" defaultValue="./logs/${APP_NAME}"/>-->
<!--    &lt;!&ndash; 日志文件最大大小 &ndash;&gt;-->
<!--    <springProperty name="LOG_MAXFILESIZE" scope="context" source="logback.filesize" defaultValue="50MB"/>-->
<!--    &lt;!&ndash; 日志保留天数 &ndash;&gt;-->
<!--    <springProperty name="LOG_FILEMAXDAY" scope="context" source="logback.filemaxday" defaultValue="7"/>-->

<!--    &lt;!&ndash; 转换器 &ndash;&gt;-->
<!--    &lt;!&ndash; 终端字体颜色转换器 &ndash;&gt;-->
<!--    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />-->
<!--    &lt;!&ndash; 异常转换器 &ndash;&gt;-->
<!--    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />-->
<!--    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />-->

<!--    &lt;!&ndash; 终端日志输出格式，设置颜色高亮 &ndash;&gt;-->
<!--&lt;!&ndash;    <property name="CONSOLE_LOG_PATTERN"&ndash;&gt;-->
<!--&lt;!&ndash;              value="%clr([${APP_NAME}]){magenta} %clr(%d{yyyy-MM-dd HH:mm:ss}){bright_yellow} %highlight(%-5level) %clr(${PID}){bright_magenta} %clr([%thread]){bright_cyan} %clr(%logger){cyan} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}" />&ndash;&gt;-->


<!--    <property name="CONSOLE_LOG_PATTERN"-->
<!--              value="[${APP_NAME}] %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%level){blue} %clr(${PID}){magenta} %clr([%X{traceId}]){yellow} %clr([%thread]){orange} %clr(%logger){cyan} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}" />-->



<!--    &lt;!&ndash;日志文件输出格式&ndash;&gt;-->
<!--    <property name="CONSOLE_LOG_PATTERN_NO_COLOR"-->
<!--              value="[${APP_NAME}] %d{yyyy-MM-dd HH:mm:ss} %level ${PID} [%thread] %logger %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}" />-->

<!--    &lt;!&ndash; 控制台日志 &ndash;&gt;-->
<!--    <appender name="StdoutAppender" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder>-->
<!--            <pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
<!--            <charset>UTF-8</charset>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    &lt;!&ndash; 按照每天生成全部日志文件 &ndash;&gt;-->
<!--    <appender name="FileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <file>${LOG_FILE}/${APP_NAME}.log</file>-->
<!--        <encoder>-->
<!--            <pattern>${CONSOLE_LOG_PATTERN_NO_COLOR}</pattern>-->
<!--            <charset>UTF-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash; 基于时间的分包策略 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            <fileNamePattern>${LOG_FILE}/${APP_NAME}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash;保留时间,单位:天&ndash;&gt;-->
<!--            <maxHistory>${LOG_FILEMAXDAY}</maxHistory>-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>${LOG_MAXFILESIZE}</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>INFO</level>-->
<!--        </filter>-->
<!--    </appender>-->


<!--    &lt;!&ndash;单独记录Info级别日志&ndash;&gt;-->
<!--    <appender name="INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash;日志文件名称&ndash;&gt;-->
<!--        <file>${LOG_FILE}/info/${APP_NAME}.log</file>-->
<!--        &lt;!&ndash;日志格式&ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>${CONSOLE_LOG_PATTERN_NO_COLOR}</pattern>-->
<!--            <charset>UTF-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash;如果只是想要 Info 级别的日志，只是过滤 info 还是会输出 Error 日志，因为 Error 的级别高，所以我们使用下面的策略，可以避免输出 Error 的日志&ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            &lt;!&ndash;过滤 Error&ndash;&gt;-->
<!--            <level>ERROR</level>-->
<!--            &lt;!&ndash;匹配到就禁止&ndash;&gt;-->
<!--            <onMatch>DENY</onMatch>-->
<!--            &lt;!&ndash;没有匹配到就允许&ndash;&gt;-->
<!--            <onMismatch>ACCEPT</onMismatch>-->
<!--        </filter>-->
<!--        &lt;!&ndash;按照日期分割日志文件&ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            <fileNamePattern>${LOG_FILE}/info/${APP_NAME}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash;保留时间,单位:天&ndash;&gt;-->
<!--            <maxHistory>${LOG_FILEMAXDAY}</maxHistory>-->
<!--            &lt;!&ndash;文件最大上限&ndash;&gt;-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>${LOG_MAXFILESIZE}</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--    &lt;!&ndash;单独记录ERROR级别日志&ndash;&gt;-->
<!--    <appender name="ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash;日志文件名称&ndash;&gt;-->
<!--        <file>${LOG_FILE}/error/${APP_NAME}.log</file>-->
<!--        &lt;!&ndash;日志格式&ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>${CONSOLE_LOG_PATTERN_NO_COLOR}</pattern>-->
<!--            <charset>UTF-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash;如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter&ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--            <level>ERROR</level>-->
<!--        </filter>-->
<!--        &lt;!&ndash;按照日期分割日志文件&ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            <fileNamePattern>${LOG_FILE}/error/${APP_NAME}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash;保留时间,单位:天&ndash;&gt;-->
<!--            <maxHistory>${LOG_FILEMAXDAY}</maxHistory>-->
<!--            &lt;!&ndash;文件最大上限&ndash;&gt;-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>${LOG_MAXFILESIZE}</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--    <appender name="file_async" class="ch.qos.logback.classic.AsyncAppender">-->
<!--        <discardingThreshold>0</discardingThreshold>-->
<!--        <appender-ref ref="FileAppender"/>-->
<!--    </appender>-->

<!--    <root level="INFO">-->
<!--        <appender-ref ref="StdoutAppender"/>-->
<!--        <appender-ref ref="file_async"/>-->
<!--        <appender-ref ref="INFO_LOG"/>-->
<!--        <appender-ref ref="ERROR_LOG"/>-->
<!--    </root>-->
<!--</configuration>-->